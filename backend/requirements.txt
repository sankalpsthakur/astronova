# AstroNova Backend Dependencies
# 
# SETUP INSTRUCTIONS:
# 1. Create and activate virtual environment:
#    python3 -m venv venv
#    source venv/bin/activate  # On Windows: venv\Scripts\activate
#
# 2. Upgrade pip:
#    pip install --upgrade pip
#
# 3. Install dependencies (note: some astronomical packages require compilation):
#    pip install flask flask-cors flask-jwt-extended flask-limiter flask-caching
#    pip install requests geopy pytz pydantic redis fpdf2 anthropic
#    pip install numpy  # Required for astronomical packages
#    pip install pyswisseph  # Swiss Ephemeris for astronomical calculations
#    pip install astropy  # Astronomical calculations and data
#    pip install timezonefinder  # Timezone lookup by coordinates
#    pip install astroquery  # Query astronomical databases
#    pip install pytest  # For testing
#
# 4. Set environment variables:
#    export SECRET_KEY='your-secret-key-here'
#    export ANTHROPIC_API_KEY='your-anthropic-api-key'
#
# 5. Run the server:
#    python app.py
#
# The server will start on http://127.0.0.1:8080

# Core Flask dependencies
flask>=2.3.0,<4.0.0
flask-cors>=5.0.0,<7.0.0
Flask-JWT-Extended>=4.5.0,<5.0.0
flask-limiter>=3.5.0,<4.0.0
Flask-Caching>=2.1.0,<3.0.0

# HTTP and API dependencies
requests>=2.31.0,<3.0.0
anthropic>=0.25.0,<1.0.0

# Data validation and processing
pydantic>=2.0.0,<3.0.0

# Astronomical calculations (require compilation)
numpy>=1.23.0  # Required for astro packages
pyswisseph>=2.10.0,<3.0.0  # Swiss Ephemeris
astropy>=5.0.0,<8.0.0  # Astronomical calculations
astroquery>=0.4.0,<1.0.0  # Query astronomical databases

# Geographic and timezone support
geopy>=2.4.0,<3.0.0
pytz>=2024.1,<2026.0
timezonefinder>=6.0.0,<7.0.0

# PDF generation and caching
fpdf2>=2.7.0,<3.0.0
redis>=5.0.0,<7.0.0

# Testing
pytest>=7.4.0,<9.0.0

# CloudKit Web Services
cryptography>=41.0.0,<43.0.0  # For CloudKit authentication
PyJWT>=2.8.0,<3.0.0  # JWT token handling
ecdsa>=0.18.0,<1.0.0  # Elliptic curve cryptography for CloudKit